<% if !f.object.is_a? ::PublicationForm %>
  <%= render 'records/edit_fields/default', f: f, key: :creator %>
<% else %>
<div class="form-group multi_value required publication_creators">
  <label class="control-label string required" for="publication_creators">Authors</label>
  <div id="creators-container">
    <% if f.object.creator.count > 0 %>
      <% f.object.creator.each do |creator| %>
        <div id="creator-<%= SecureRandom.uuid %>">
          <%= f.simple_fields_for :creators do |creator_form| %>
            <% creator_form.object = creator %>
            <%= render 'creator_fields', f: creator_form %>
          <% end %>
        </div>
      <% end %>
    <% else %>
      <div id="creator-<%= SecureRandom.uuid %>">
        <%= f.simple_fields_for :creators do |creator_form| %>
          <%= render 'creator_fields', f: creator_form %>
        <% end %>
      </div>
    <% end %>
    </div>
    <button type="button" class="btn btn-link add add-creator"><span class="glyphicon glyphicon-plus"></span><span class="controls-add-text">Add another Author</span></button>
</div>


  <script>
    document.addEventListener('DOMContentLoaded', function() {
      var addCreatorButton = document.querySelector('.add-creator');
      var form = document.getElementById('new_publication_') || document.querySelectorAll('form[id^="edit_publication_"]')[0];

      addCreatorButton.addEventListener('click', function() {
        var creatorsContainer = document.getElementById('creators-container');
        var lastCreator = creatorsContainer.querySelector('div[id^="creator-"]').lastElementChild;
        const uuid = crypto.randomUUID();
        var newCreator = lastCreator.cloneNode(true);
        newCreator.id = `creator-${uuid}`;
        var inputs = newCreator.querySelectorAll('input');
        inputs.forEach(input => input.value = '');
        creatorsContainer.appendChild(newCreator);
        toggleRemoveButtons();
      });

      form.addEventListener("submit", function(event) {
        let creators = convertCreatorsToString();

        for (let i = 0; i < creators.length; i++) {
          var creator_field = document.createElement('input');
          creator_field.type = 'hidden'
          creator_field.name = 'publication[creator][]';
          creator_field.value = creators[i];
          form.appendChild(creator_field);
        }
      });

      toggleRemoveButtons();
    });

    function convertCreatorsToString() {
      const creatorEntries = document.querySelectorAll('div[id^="creator-"]');
      var creatorStrings = [];

      creatorEntries.forEach(creatorEntry => {
          const firstName = creatorEntry.querySelector('input[name="publication[creators][first_name]"]').value.trim();
          const lastName = creatorEntry.querySelector('input[name="publication[creators][last_name]"]').value.trim();
          const institution = creatorEntry.querySelector('input[name="publication[creators][institution]"]').value.trim();
          const orcidId = creatorEntry.querySelector('input[name="publication[creators][orcid_id]"]').value.trim();
          let creatorString = `${firstName}, ${lastName}, ${institution}`;
          if (orcidId.trim() !== '') {
            creatorString += `, ${orcidId}`;
          }
          creatorStrings.push(creatorString);
      });

      return creatorStrings;
  }


    function toggleRemoveButtons() {
      const creatorEntries = document.querySelectorAll('div[id^="creator-"]');

      creatorEntries.forEach((creatorEntry, index) => {
          const removeButton = creatorEntry.querySelector('.remove');
          if (index === 0) {
              removeButton.style.display = 'none';
          } else {
              removeButton.style.display = 'inline-block';
          }
      });
    }

    function removeCreator() {
      const creator = event.target.closest('div[id^="creator-"]');
      creator.remove();
    }
  </script>
<% end %>
